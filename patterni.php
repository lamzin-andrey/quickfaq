<?php
/**
 * Что я знаю о паттернах.
 * Для реализации схемы MVC в основном используется тройка паттернов - Компоновщик, Стратегия и Наблюдатель.
**/
 
 /**
  * Компоновщик
 **/
 function Composite() {
	 /* *
	  * Выстраивает объекты в иерархию по признаку часть - целое.
	  * Позволяет манипулировать с частью также как и с целым
	  * */
 }
 
 /**
  * Наблюдатель
 **/
 function Observer() {
	 /**
	  * Создает отношение между объектами системы вида один ко многим таким образом, что 
	  * Изменение состояния одного объекта тут же отражается на многих.
	  * **/
	  //Может использовать ChangeManager или может не использовать его. Без использования
	  Observer();
	  Observer.update();
	  Subject();
	  Subject.attach(Observer);
	  Subject.detach(Observer);
	  Subject.notify();
	  
	  CSubject.getState();
	  CSubject.setState();
	  //Может использовать ChangeManager или может не использовать его. Без использования
 }
 
 /**
  * Стратегия
 **/
 function Strategi() {
	 /**
	  * Инкапсулирует семейство алгоритмов, позволяя менять их динамически независимо от клиента.
	  * Независимость достигается введенинем объекта инкапсулирующего контекст, который либо передает все необходимые данные 
	  * в конкретную стратегию либо ссылку на самого себя и тогда стратегия может 
	  * использовать методы контекста для получения данных необходимых для модели.
	  * **/
 }
?>
